// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSXElement exit visitor when the element is not the VocabTransform element should append its closing tag to the message and add its render function to the translation hook properties 1`] = `
{
  "elementNameOccurrences": {},
  "elementNameStack": [],
  "key": "Existing text click me",
  "message": "Existing text <button>click me</button>",
  "translationHookProperties": [
    {
      "computed": false,
      "decorators": null,
      "key": {
        "name": "button",
        "type": "Identifier",
      },
      "shorthand": false,
      "type": "ObjectProperty",
      "value": {
        "async": false,
        "body": {
          "children": [
            {
              "expression": {
                "name": "children",
                "type": "Identifier",
              },
              "type": "JSXExpressionContainer",
            },
          ],
          "closingElement": {
            "name": {
              "name": "button",
              "type": "JSXIdentifier",
            },
            "type": "JSXClosingElement",
          },
          "openingElement": {
            "attributes": [],
            "name": {
              "name": "button",
              "type": "JSXIdentifier",
            },
            "selfClosing": false,
            "type": "JSXOpeningElement",
          },
          "selfClosing": null,
          "type": "JSXElement",
        },
        "expression": null,
        "params": [
          {
            "name": "children",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    },
  ],
}
`;

exports[`JSXElement exit visitor when the element is the VocabTransform element should replace its children with the translation hook call 1`] = `
[
  {
    "expression": {
      "arguments": [
        {
          "type": "StringLiteral",
          "value": "Click here",
        },
        {
          "properties": [
            {
              "computed": false,
              "decorators": null,
              "key": {
                "name": "button",
                "type": "Identifier",
              },
              "shorthand": false,
              "type": "ObjectProperty",
              "value": {
                "async": false,
                "body": {
                  "children": [
                    {
                      "expression": {
                        "name": "children",
                        "type": "Identifier",
                      },
                      "type": "JSXExpressionContainer",
                    },
                  ],
                  "closingElement": {
                    "name": {
                      "name": "button",
                      "type": "JSXIdentifier",
                    },
                    "type": "JSXClosingElement",
                  },
                  "openingElement": {
                    "attributes": [],
                    "name": {
                      "name": "button",
                      "type": "JSXIdentifier",
                    },
                    "selfClosing": false,
                    "type": "JSXOpeningElement",
                  },
                  "selfClosing": null,
                  "type": "JSXElement",
                },
                "expression": null,
                "params": [
                  {
                    "name": "children",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
      ],
      "callee": {
        "name": "t",
        "type": "Identifier",
      },
      "type": "CallExpression",
    },
    "type": "JSXExpressionContainer",
  },
]
`;
